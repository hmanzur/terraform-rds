name: 📦 Terraform Environment Setup

on:
  workflow_dispatch:
    inputs:
      action:
        description: "🛠️ Action to perform"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

      environment:
        description: "🌍 Target environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  bucket:
    name: 🛠️ Create S3 bucket for Terraform state
    runs-on: ubuntu-latest

    steps:
      - name: 🛠 Checkout repo
        uses: actions/checkout@v4

      - name: 🪪 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: 🚀 Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file create-tfstate-bucket.yml \
            --stack-name ${{ vars.AWS_BUCKET_PREFIX }}-${{ github.event.inputs.environment }} \
            --parameter-overrides StateBucket=${{ vars.AWS_BUCKET_PREFIX }} Environment=${{ github.event.inputs.environment }} \
            --capabilities CAPABILITY_NAMED_IAM

  plan:
    name: 🧪 Terraform Plan
    runs-on: ubuntu-latest
    needs: bucket

    outputs:
      plan-artifact: tfplan-${{ github.event.inputs.environment }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 💽 Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 🧩 Generate backend config from template
        run: |
          cat > backend.tfbackend <<EOF
          bucket         = "my-tfstate-${{ github.event.inputs.environment }}"
          key            = "${{ github.event.inputs.environment }}/terraform.tfstate"
          region         = "us-east-1"
          encrypt = true
          EOF

      - name: 📁 Initialize Terraform
        run: terraform init -backend-config=backend.tfbackend

      - name: 📋 Terraform plan
        run: terraform plan -out=tfplan -input=false

      - name: 📦 Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.event.inputs.environment }}
          path: tfplan

  apply:
    name: 🚀 Terraform Apply (Approval Required)
    needs: plan
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 💽 Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 🧩 Generate backend config from template
        run: |
          cat > backend.tfbackend <<EOF
          bucket         = "my-tfstate-${{ github.event.inputs.environment }}"
          key            = "${{ github.event.inputs.environment }}/terraform.tfstate"
          region         = "us-east-1"
          encrypt = true
          EOF

      - name: 📁 Initialize Terraform
        run: terraform init -backend-config=backend.tfbackend

      - name: 📦 Download tfplan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ github.event.inputs.environment }}
          path: .

      - name: 🧨 Terraform apply
        run: terraform apply tfplan
